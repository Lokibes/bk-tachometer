SYSROOT := /home/oneadmin/android-ndk-r8b/platforms/android-8/arch-arm
MORE_INCLUDES := -I/mnt/ramdisk/fftw3_cortex_a8_no_neon/include -I./include -I./wavelets \
                 -I/mnt/ramdisk/Softfoundry/trunk/doubango/thirdparties/android/include/webrtc
CC := arm-linux-androideabi-gcc
CPP := arm-linux-androideabi-g++
CFLAGS := -mfpu=neon -marm -march=armv7-a -mfloat-abi=softfp -mtune=cortex-a8 -O0 -std=gnu99 -c --sysroot=$(SYSROOT)
CPPFLAGS := -mfpu=neon -marm -march=armv7-a -mfloat-abi=softfp -mtune=cortex-a8 -O0 -std=gnu++0x -c --sysroot=$(SYSROOT)
CPP_MORE_INCLUDES := -I/home/oneadmin/android-ndk-r8b/sources/cxx-stl/gnu-libstdc++/4.4.3/include \
                     -I/home/oneadmin/android-ndk-r8b/sources/cxx-stl/gnu-libstdc++/4.4.3/libs/armeabi-v7a/include
                     
CLDFLAGS := --sysroot=$(SYSROOT) -L/mnt/ramdisk/fftw3_cortex_a8_no_neon/lib \
            -lfftw3f -lm
CPPLDFLAGS := --sysroot=$(SYSROOT) \
              -L/home/oneadmin/android-ndk-r8b/sources/cxx-stl/gnu-libstdc++/4.4.3/libs/armeabi \
              -lgnustl_static
#DEBUG_FLAGS := -DBUFFER_DEBUG
#DEBUG_FLAGS := -DTACHO_DEBUG
DEBUG_FLAGS :=
################################################################################

TARGET := tacho_test_no_neon
SRCS_C := performance_test.c \
		tachometer_history.c \
		tachometer_audio_buffer.c \
		tachometer_process.c
		
SRCS_CPP := wavelets/tachometer_wavelet1d.cpp \
            wavelets/wavelet2s.cpp \
            wavelets/tachometer_wavelet_denoiser.cpp

OBJS_C := $(SRCS_C:.c=.o)
OBJS_CPP := $(SRCS_CPP:.cpp=.o)
OBJS := $(OBJS_C) $(OBJS_CPP)

DEPEND_FILES := $(OBJS:.o=.o.d)
ASSEMBLY_FILES := $(OBJS:.o=.s)

#  Building on Linux
RPATH='$$ORIGIN'
DONE=@if [ -f $(1) ]; then echo Build completed.; fi
RM=rm -f $(1)
MD=@if [ ! -d $(1) ]; then mkdir $(1); fi
CP=cp

#######################################################

all: $(TARGET)
		$(call DONE,$(TARGET))
		
rebuild: clean all

clean:
	$(call RM,$(OBJS))
	$(call RM,$(DEPEND_FILES))
	$(call RM,$(TARGET))
	$(call RM,$(ASSEMBLY_FILES))
	$(call RM,output.txt)
	$(call RM,*~)

%.o: %.c
	$(CC) -MMD -MP -MF $@.d $(CFLAGS) $(DEBUG_FLAGS) $(MORE_INCLUDES) $< -o $@
	$(CC) -MMD -MP -MF $@.d $(CFLAGS) $(DEBUG_FLAGS) $(MORE_INCLUDES) $< -S
	
%.o: %.cpp
	$(CPP) -MMD -MP -MF $@.d $(CPPFLAGS) $(DEBUG_FLAGS) $(MORE_INCLUDES) $(CPP_MORE_INCLUDES) $< -o $@

$(TARGET): $(OBJS)
	$(CPP) $(OBJS_C) $(OBJS_CPP) $(CLDFLAGS) $(CPPLDFLAGS) $(MORE_INCLUDES) -o $@
